Item.embargo datastream: create the DS, using default embargo info from APO.

Collection Edit: with Javascript enabled, cannot add more than one person-role
without clicking Save after each one.  

Item Edit: When adding people, if a row with no name field is present when the 
form is saved, that row should not be stored at all.  There is currently a bug
which occurs if you add a blank row (i.e. no no name), and then add another row with a name and then save.  Strange things happen (the role field and/or name value is lost).

Submit relevant (or all) form data on addition of multi-valued fields (issues
w/ non-linear indexed role MD)

Item Edit: form for a new item should be populated with default values for the 
embargo and license fields.

Create new Collection: create rightsMetadata.

Create new Item: create rightsMetadata. The rightsMetadata will contain the
Item-level license and visibility info (confirm the latter).


--------------------------------------------------
Updating info when Collections/Items are published
--------------------------------------------------

next: refactor publis to use the new workflow code

When Coll/Item is published, use workflow service to advance hydrusAssemblyWF:
 submit = completed
 approve = completed # If approval/review not needed

When Coll/Item is approved (either automatically or by user), use workflow service to:
 # mostly done
 advance hydrusAssemblyWF
 start-assembly = completed
 initialice the assemblyWF

Item.identityMetadata.objectLabel = Item.title. [Need to set up workflow first].


-------
WAITING
-------

APO RELS-EXT datastream needs to add a child node to <rdf:Description>:
<hydra:referencesAgreement rdf:resource="info:fedora/druid:XXX"/>, where XXX is
the PID of the global Hydrus Agreement object. [The Hydrus agreement object
needs to be created -- need more details].

Events datastreams for Collections and Items: create datastreams and add events
to them. [waiting on spec for the relevant events and the stream content]

Collection create/edit: need place to store whether Collection requires
approval/review. Also need UI component.

Store "agree to terms" checkbox for item [we need a place to store this].

Item view: release date. See Consul page. Date from "published" lifecycle when
it exists, else "not released". Display format: 31-Jan-2012. [waiting on
workflow discussion]

Use reified WFs rather than putting them in the APO. [Need more info on how
this works and its relative priority. Also waiting on some work Willy is doing
in dor-services.]

Collection create: APO.roleMetadata: set the value of <name> for the
collection-manager [waiting on LDAP].

Collection create: APO.descMetadata. Flesh out. [waiting on spec from Lynn]

Should roleMetadata have an XML namespace? If so, what should it be? Could
not find any definitive examples in Consul. [Ask Lynn]
