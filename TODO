Collection Edit: with Javascript enabled, cannot add more than one person-role
without clicking Save after each one.

Submit relevant (or all) form data on addition of multi-valued fields (issues
w/ non-linear indexed role MD)

Collection View: Without javascript: Make sure Open Collection button is not
enabled until all required fields are filled out (currently, it is enabled with
empty form).

Move Open Collection/Close Collection button and delete collection trash icon
and associated text to Collection View "What you can do" box from Collection
Edit Actions box.

Collection View: "What you can do" box should show trash icon with "Cannot
discard collection because it contains items." label under Open Collection
button if collection has items.

Collection and Item View pages: Improve display of main content area for both
so that only required fields and fields with values are shown. Display
"not specified" for required field values that are empty.
  - Need way to handle the fact that saving a collection creates one empty
    (invalid) related item, actor, etc., which makes checking for an
    "unspecified" attribute (i.e., attribute that should respond positively
    to .blank? but doesn't because it contains empty string(s)) difficult.

Write tests to be sure correct thing is happening when displaying "not
specified" for empty fields.

Item Edit: form for a new item should be populated with default values for the 
embargo and license fields.


--------------------------------------------------
Updating info when Collections/Items are published
--------------------------------------------------

When Coll/Item is published, use workflow service to advance hydrusAssemblyWF:
 submit = completed
 approve = completed # If approval/review not needed

When Coll/Item is approved (either automatically or by user), use workflow service to:
 advance hydrusAssemblyWF
 start-assembly = completed
 initialice the assemblyWF
 "#{Dor::Config.dor.service_root}/dor/v1/objects/#{@pid}/apo_workflows/assemblyWF"

APO.identityMetadata.objectLabel = "APO for #{Collection.title}"

APO.descMetadata.title = "APO for #{Collection.title}"

APO.defaultObjectRights: create datastream.

Collection.identityMetadata.objectLabel = Collection.title

Item.identityMetadata.objectLabel = Item.title


----------------------------
Collection and Item creation  # MH
----------------------------

Collection.identityMetadata:
 - objectType: needs to be set to both 'collection' and 'set'
 - add another tag: "Hydrus : collection"

Item.identityMetadata:
 - add another tag: "hydrus : [itemtype]"
 - for now hard-code itemtype = dataset
 - need to figure out where this info will be stored in object

Collection.roleMetadata:
 - create the datastream
 - set the collection-depositor as the current logged-in user

Item.roleMetadata:
 - create the datastream
 - set the item-depositor as the current logged-in user
 - add namespace

Item.embargo datastream:
 - create the DS, using default embargo info from APO
 - ask Willy about services available for embargo management


-------
WAITING
-------

APO RELS-EXT datastream needs to add a child node to <rdf:Description>:
<hydra:referencesAgreement rdf:resource="info:fedora/druid:XXX"/>, where XXX is
the PID of the global Hydrus Agreement object. [The Hydrus agreement object
needs to be created -- need more details].

Create new Collection: rightsMetadata should be created automatically, as soon
as the corresponding APO has the defaultObjectRights datastream. However, my
understanding is that the APO won't get this datastream until the user clicks
Publish. [need more details from Lynn]

Create new Item: rightsMetadata should be created automatically, as soon as the
corresponding APO has the defaultObjectRights datastream. The rightsMetadata
will contain the Item-level license and visibility info (confirm the latter).
However, my understanding is that the APO won't get the defaultObjectRights
datastream until the user clicks Publish. [need more details from Lynn]

Events datastreams for Collections and Items: create datastreams and add events
to them. [waiting on spec for the relevant events and the stream content]

Collection create/edit: need place to store whether Collection requires
approval/review. Also need UI component.

Store "agree to terms" checkbox for item [we need a place to store this].

Item view: release date. See Consul page. Date from "published" lifecycle when
it exists, else "not released". Display format: 31-Jan-2012. [waiting on
workflow discussion]

Use reified WFs rather than putting them in the APO. [Need more info on how
this works and its relative priority]

Collection create: APO.roleMetadata: set the value of <name> for the
collection-manager [waiting on LDAP].

Collection create: APO.descMetadata. Flesh out. [waiting on spec from Lynn]
