-----------------
APO-of-Collection
-----------------

For reference, see the Revs APO:
    https://dor-prod.stanford.edu/fedora/objects/druid:qv648vd4392/datastreams

RELS-EXT:
    - Hydrus app needs to add hydra:referencesAgreement:
       <rdf:Description rdf:about="info:fedora/druid:[apo-id]">
       <hydra:referencesAgreement rdf:resource="info:fedora/druid:mc322hh4254"/>

    - Hydrus app should add the hydra namespace if not already there:
        xmlns:hydra="http://projecthydra.org/ns/relations#"

descMetadata:
    - needs to be created: for now just a title node.
    - Lynn will give us a spec for the rest.

administrativeMetadata: [waiting on discussion of Hydrus and DLSS pipeline]
    - create common assembly workflow?
    - create common accessioning workflow

roleMetadata:
    - set the collection-manager as the current logged-in user (done already?)
    - set the value of <name> (need to get from webauth or LDAP)


--------------------------------
Advancing hydrusAssemblyWF steps
--------------------------------

When Coll/Item is published:
    submit  = completed
    approve = completed  # If approval/review not needed

When Coll/Item is approved (either automatically or by user)
    start-accession = completed


-----------------------------------------
Updating info when Coll/Item is published
-----------------------------------------

APO.identityMetadata.objectLabel = "APO for #{Collection.title}"

APO.descMetadata.title = "APO for #{Collection.title}"

APO.defaultObjectRights: create datastream.


----------
Collection
----------

identityMetadata:
    - objectType: needs to be set to both 'collection' and 'set'
    - refresh objectLabel when Collection is published
    - add another tag: "Hydrus : collection"

workflows:
    - should be handled automatically as soon as APO has this WF
      - write integration test to cxonfirm
      - check lifecycle=registered

events:
    - create the datastream
    - start adding events
    - need to determine what the relevant events are

rightsMetadata:
    - should be handled automatically as soon as APO has defaultObjectRights

Collection approval/review
    - need place to store whether Collection requires approval/review
    - need UI component

roleMetadata:
    - create the datastream


----
Item
----

identityMetadata:
    - refresh objectLabel when Item is published
    - add another tag: "hydrus : [itemtype]"
        - for now hard-code itemtype = dataset
        - need to figure out where this info will be stored in object

workflows:
    - should be handled automatically as soon as APO has this WF
      - write integration test to cxonfirm
      - check lifecycle=registered

events:
    - create the datastream
    - start adding events
    - need to determine what the relevant events are

rightsMetadata:
    - should be handled automatically as soon as APO has defaultObjectRights

roleMetadata:
    - create the datastream
    - set the item-depositor as the current logged-in user


-------------------------
Assembly and accessioning
-------------------------

Entry into the larger DLSS pipeline: assembly or common-accessioning?
  - Peter and Monty will assess, and then discuss with Lynn, etc.

File transfer, copying, etc.

Robot failures?
