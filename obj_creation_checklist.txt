-----------------
APO-of-Collection
-----------------

For reference, see the Revs APO:
    https://dor-prod.stanford.edu/fedora/objects/druid:qv648vd4392/datastreams

RELS-EXT:
    - Hydrus app needs to add hydra:referencesAgreement:
       <rdf:Description rdf:about="info:fedora/druid:[apo-id]">
       <hydra:referencesAgreement rdf:resource="info:fedora/druid:mc322hh4254"/>

    - Hydrus app should add the hydra namespace if not already there:
        xmlns:hydra="http://projecthydra.org/ns/relations#"

descMetadata:
    - needs to be created: for now just a title node.
    - Lynn will give us a spec for the rest.


--------------------------------
Advancing hydrusAssemblyWF steps
--------------------------------

When Coll/Item is published, use workflow service to advance hydrusAssemblyWF:
    submit  = completed
    approve = completed  # If approval/review not needed

When Coll/Item is approved (either automatically or by user), use workflow service to:
    advance hydrusAssemblyWF
        start-assembly = completed
    initialice the assemblyWF
        "#{Dor::Config.dor.service_root}/dor/v1/objects/#{@pid}/apo_workflows/assemblyWF"


-----------------------------------------
Updating info when Coll/Item is published
-----------------------------------------

APO.identityMetadata.objectLabel = "APO for #{Collection.title}"

APO.descMetadata.title = "APO for #{Collection.title}"

APO.defaultObjectRights: create datastream.


----------
Collection
----------

identityMetadata:
    - objectType: needs to be set to both 'collection' and 'set'
    - refresh objectLabel when Collection is published
    - add another tag: "Hydrus : collection"

events:
    - create the datastream
    - start adding events
    - need to determine what the relevant events are

rightsMetadata:
    - should be handled automatically as soon as APO has defaultObjectRights

Collection approval/review
    - need place to store whether Collection requires approval/review
    - need UI component

roleMetadata:
    - create the datastream? [not in checklist]


----
Item
----

identityMetadata:
    - refresh objectLabel when Item is published
    - add another tag: "hydrus : [itemtype]"
        - for now hard-code itemtype = dataset
        - need to figure out where this info will be stored in object

events:
    - create the datastream
    - start adding events
    - need to determine what the relevant events are

embargo datastream:
    - create the DS, using default embargo info from APO
    - ask Willy about services available for embargo management

rightsMetadata:
    - should be handled automatically as soon as APO has defaultObjectRights
    - this DS will contain the Item-level license info
    - this DS will contain the Item-level visibility info [confirm with Lynn]

roleMetadata:
    - create the datastream
    - set the item-depositor as the current logged-in user
