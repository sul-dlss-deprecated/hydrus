****************
OCTOBER 2012
****************

--------
Roles and Discovery
--------

Workflow changes and SOLR: when the workflow DS for an object changes, the
local SOLR index on a developer's box is not updated. Option 1: set up a
listener that will update local SOLR when objects changes on the dor-dev
environment. See dor-services-gem bin/ directory. Option 2: run the workflow
service locally.

Workflow fixtures. Create proper worflow XML fixture files, and modify rake
refresh_workflows task to load the files. We need more fine-grained controlled
over the states of our fixture objects.

Integration tests for dashboard with different users logged in.

Apply gated discovery to search queries.

Role-protect dashboard actions: "Create a new collection" button.

Role-protect Collection actions: various buttons.

Role-protect Item actions: various buttons.

--------
UI Redesign
--------

Item and Collect edit. When you click one of the "Add..." or "Delete..."
buttons, we should give the user some visual feedback so they don't think
nothing happened.

UI redesign: side bar and tabs.

--------
Technical Debt
--------

Deployment to hydrus-test.stanford.edu is a hassle. In particular, it's not easy
to get the latest fixture/file content up-to-date.

Need to load user fixtures on deployment to hydrus-dev.stanford.edu.

Unit test coverage: let's improve the coverage (esp in controllers) or lower
the thresholds in jenkins for determining when the project is "unstable".

rightsMD: (a) tests; (b) refactor to take advantage of OM and generic_ds.rb.

****************
WAITING
****************

Dashboard: implement hyperlinks to items-by-status. For example, "3 published"
should be a hyperlink to the 3 published items for the applicable collection.

Item view page. The "Test Version" image in the top left corner interferes with
the user's ability to click the Collection hyperlink, especially when the
Collection has a very short title.

Collection/Item create. Rather than starting a new Item/Collection with blank
text boxes, use the approach we have adopted elsewhere for non-required items:
have the user click "Add" button first. Collection: links to related items.
Item: related citations; and links to related items.

Consider moving Hydrus::Responsible into RoleMDDS. Not sure that we need the module.
Also, there is currently some duplication between Hydrus::Responsible and the
to_solr() method in RoleMDDS.

Need a place to store Item types. Currently hardcoded to :dataset. Also see
object_type() in GenericObject. [Lynn and Hannah will discuss]

APO RELS-EXT datastream needs to add a child node to <rdf:Description>:
<hydra:referencesAgreement rdf:resource="info:fedora/druid:XXX"/>, where XXX is
the PID of the global Hydrus Agreement object. [The Hydrus agreement object
needs to be created -- need more details].

Use reified WFs rather than putting them in the APO. (a) Set up WF objects
on -dev. (b) Work with Willy to deploy the feature to -dev.

Collection create: APO.roleMetadata: set the value of <name> for the
collection-manager [waiting on LDAP].

Collection create: APO.descMetadata. Flesh out. [waiting on spec from Lynn]

Should roleMetadata have an XML namespace? If so, what should it be? Could not
find any definitive examples in Consul. [waiting on response from Lynn]

Item view page: the actions box div is called "div.collection-actions".
[Postpone this until we have GG's new design for sidebar, etc.]
