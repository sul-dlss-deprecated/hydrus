--------
DOR integration
--------

Work with Chris to have Camel post requests to HydrusSolrController.

Set up production VM and prove that we can deploy to production.

Create real uber Hydrus APO.

--------
Other
--------

Assess allowing collections to be opened without being published. In effect,
this would be an open, draft Collection.

After a collection has been published, is it editable? If so, do we need
to push it through the accessioning pipeline again?

Support item delete action.

Gryphondor for Hydrus objects.

Update to Rubydora 0.6.0, which might speed up integration tests. [We
are blocked by dor-services gem restriction, which seems too strict. Speak
with Jon D.]

Should submit_for_approval() and resubmit() send email messages?

Remove all code that puts WF into the APO. Search for workflow_steps.

Dates and times. We are creating, parsing, displaying dates and times in
various ways throughout the app, both in code and in tests. Create some utility
methods to consolidate the needed behavior so that it will be easy to be
consistent across the app with respect to display format, storage format, and
timezone (for the latter, use GMT).

After finishing more thorough UI rework, look at: responsiveness issues;
accessibility issues.

Update search results page; UI redesign degraded formatting of it.

Views and controllers: rename @document_fedora to something more compact.

Update SUL-chrome gem to latest Bootstrap (needed to be able to use the
unchecked checkbox icon, which is not available in our current SUL-chrome gem).
When this is done, change "icon-minus" to "icon-check-empty" in the
select_status_checkbox_icon helper method (application_helper.rb).

Item View page: Fix conditional display of metadata sections when only some
required fields have been saved.

Refactor and write tests for redirect_if_not_correct_object_type: seems more
complex than it needs to be.

Disable edit tab for published items. NOTE: this already happens automatically
when not in development mode.

Refactor purl_page_ready() to use workflow_ds_extension. Ask Chris J. whether
the PURL app provides an API we could use to check PURL status, rather than
querying workflow.

Move tests for workflow_ds_extension out of gen_obj_spec and into its own spec.

Stub out workflow calls in unit and integration tests that create objects with
the "fake" PID, so that we don't run into random test failures. Step 1:
identify methods that advance the workflow (publish and its cousins). Step 2:
identify tests that invoke those methods in a non-druid-minting context.

rightsMD: Refactor to take better advantage of OM and generic_ds.rb.

Consider moving the actual collection-depositor roleMD info from the APO to
the Collection, for two reasons: (1) it parallels the roleMD stored in the
Item; (2) without it, we don't have access to the collection depositor
during search results (at least not without mucking with the to_solr method).

Collection Items page: Type column is temporarily commented out. Add back when
we distinguish between different item types.

Work with Willy to switch local dev environment to use a local workflow service
rather than the workflow service on sul-lyberservices-dev.

Should the hydrus app be logging more systematically?

Dashboard: implement hyperlinks to items-by-status. For example, "3 published"
should be a hyperlink to the 3 published items for the applicable collection.

Collection/Item create. Rather than starting a new Item/Collection with blank
text boxes, use the approach we have adopted elsewhere for non-required items:
have the user click "Add" button first. Collection: links to related items.
Item: related citations; and links to related items.

Consider moving Hydrus::Responsible into RoleMDDS. Not sure that we need the
module. Also, there is currently some duplication between Hydrus::Responsible
and the to_solr() method in RoleMDDS.

APO RELS-EXT datastream needs to add a child node to <rdf:Description>:
<hydra:referencesAgreement rdf:resource="info:fedora/druid:XXX"/>, where XXX is
the PID of the global Hydrus Agreement object. [The Hydrus agreement object
needs to be created -- need more details].

Collection create: APO.roleMetadata: set the value of <name> for the
collection-manager [waiting on LDAP].

Item view page: the actions box div is called "div.collection-actions".
Is this a problem?

The home page is producing explosive volumes of SOLR logging. This occurs
during the super() call in index() of catalog_controller.rb, which invokes a
Blacklight method that logs the entire SOLR response. A bug has been filed; in
the meantime, you can use the `rake server` task, which filters out most of the
noise.
