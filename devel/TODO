------------------
Versioning for Items
------------------

Unit and integration tests:

    complete_workflow_step
    uncomplete_workflow_step
    update_workflow_status

    create() should set version info

    - assemblyWF should contain pipelined lifecycle

    - added open_new_version() to Item controller

    - Item/Coll pages should have "active" class for the correct tab -- an <li> element

    - integration tests for versioning
        - can see version number on item view page: tag, started time
        - should not see version fields when editing initial version
        - editing cycle
            - open new version
            - edit, etc
            - make sure version info is required
            - close version
            - open new version again

    is_accessioned
        - also should return true during automated testing.

    start_common_assembly
    publish_metadata
    do_publish
        should close version on subsequent versions
        should add version tag to event msg
    open_new_version
    close_version

Deploy and roadtest on hydrus-test.

Get hydrus-dev.stanford.edu work as dordev environment.

--------
Other: on deck for January
--------

Push APOs through the accession pipeline during the initial open(), just like
the corresponding collection.

Support user's ability to hide specific files, which has the effect of setting
publish and shelve to false in the content metadata. Offer a "Hide" checkbox
(default unchecked) next to each uploaded file. Also include an info icon with
some help text.

HYDRUS-50. Add new roles to the Contributor drop-down: Advisor, Primary advisor.

HYDRUS-51. Add support for "corporate" and "conference" Contributor name types.
[See ticket for details.]

HYDRUS-52. Item license selection. See ticket for details. Also include "No
license" as an option for the default value set at the collection level.
[Questions emailed to Hannah; she will clarify the ticket.]

HYDRUS-54. Implement restrictions governing what a user is allowed to change in
subsequent versions.

Modify purl_page_ready() to indicate if the page is for the prior version -- in
effect, "ready but stale".

--------
Other: blocked, requires discussion, uncertain need, etc.
--------

rightsMD: <access> blocks should include <none/> to indicate no access. This is
sort of a pain: how important is it?

Dashboard: implement hyperlinks to items-by-status. For example, "3 published"
should be a hyperlink to the 3 published items for the applicable collection.

Embargo, visibility, and license for draft Items under scenarios when the
collection's policies are changed from varies to fixed. Current app behavior:
if the collection allows "varies", the edit UI offers widgets; otherwise, the
Item view/edit pages display the current value for the Item. The problem
scenario: if Collection changes from varies to fixed, its unpublished items
will be "stuck" at their current value -- which might or might not agree with
the new fixed value set by the collection manager.

Move Terms of Deposit acceptance pop-up so it shows (if needed) when an item is
created.

Collection Items page: Type column is temporarily commented out. Add back when
we distinguish between different item types.

Work with Willy to switch local dev environment to use a local workflow service
rather than the workflow service on sul-lyberservices-dev.

Search results page: design could use some improvement. In addition, the
page does not provide a link back to the home page.

Assess allowing collections to be opened without being published. In effect,
this would be an open, draft Collection.

Should submit_for_approval() and resubmit() send email messages?

Should the hydrus app be logging more systematically?

Implement the ability for an admin to become some other user.

Gryphondor for Hydrus, so that Hydrus objects appear in SearchWorks.
[Gryphondor might be ready to add Hydrus as a project in February.]

Create object mc322hh4254 (hydra:referencesAgreement) on hydrus-dev,
hydrus-test, and hydrus-prod. [Hannah/Lynn]

Collection create: APO.roleMetadata: set the value of <name> for the
collection-manager [waiting on LDAP].

Update SUL-chrome gem to latest Bootstrap (needed to be able to use the
unchecked checkbox icon, which is not available in our current SUL-chrome gem).
When this is done, change "icon-minus" to "icon-check-empty" in the
select_status_checkbox_icon helper method (application_helper.rb).

Upgrade to hydra-head 5.0, active-fedora 5.2, OM 1.8, Solrizer 2.0, and
Blacklight 4.0. See github.com/projecthydra/hydra-head/wiki/Migrating-to-5.0.

When we upgrade to Nokogiri 1.5.6 we might encounter some namespace gotchas
when trying to access attributes. [See email from Jon Deering.]

Update Rubydora and incorporate rollback_fixtures() into it. See
spec_helper.rb. [We are blocked by active-fedora gem restriction to to 0.5.x
series. When we ugrade active-fedora, that restriction will disappear.]

Deprecation warning: "Hydra::FileAssetsHelper has been moved". We will need to
deal with this before we move to hydra-head v5x.

The home page is producing explosive volumes of SOLR logging. This occurs
during the super() call in index() of catalog_controller.rb, which invokes a
Blacklight method that logs the entire SOLR response. A bug has been filed; in
the meantime, you can use the `rake server` task, which filters out most of the
noise. [Might be fixed when we upgrade to newer version of the hydra stack.]

XML formatting issues: (1) MODS elements should be in the default order of the
MODS spec. (2) Save the XML in some consistent pretty-print form. (3) No
useless empty elements. We attempted to make some improvement to descMetadata
using the beautify_datastream() and add_hydrus_next_sibling_node() methods;
however, the former method led to some strange behavior (for example, note the
failure of `rails runner devel/create_test_item.rb batch co i`). Further
progress probably requires some planning/discussion. The existing hydra-OM
stack does not make it easy to address all of the concerns, and several DLSS
developers expressed skepticism about the wisdom of the endeavor. If this is
truly a requirement, we should to decide the most practical place to implement
such behavior -- in every application or in a single XML-cleanup gem that all
applications could invoke.

Consider moving the actual collection-depositor roleMD info from the APO to the
Collection, for two reasons: (1) it parallels the roleMD stored in the Item;
(2) without it, we don't have access to the collection depositor during search
results (at least not without mucking with the to_solr method, which we have
done in the roleMD class).

Hydrus needs to skip a step in assemblyWF. Currently we achieve this by
bypassing the reified workflow system and pushing custom XML directly into the
WF service (see start_common_assembly). A better approach would be to have
dor-services and workflow service accept an options hash allowing the caller to
request that particular steps in the workflow be marked as skipped.

Consider adding version_significance() to dor-services gem.
