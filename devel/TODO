Item.embargo datastream: create the DS, using default embargo info from APO.

Collection Edit: with Javascript enabled, cannot add more than one person-role
without clicking Save after each one.  

Item Edit: When adding people, if a row with no name field is present when the 
form is saved, that row should not be stored at all.  There is currently a bug
which occurs if you add a blank row (i.e. no no name), and then add another row with a name and then save.  Strange things happen (the role field and/or name value is lost).

Submit relevant (or all) form data on addition of multi-valued fields (issues
w/ non-linear indexed role MD)

Item Edit: form for a new item should be populated with default values for the 
embargo and license fields.

Create new Collection: create rightsMetadata.

Create new Item: create rightsMetadata. The rightsMetadata will contain the
Item-level license and visibility info (confirm the latter).

Item view: release date. See Consul page. Date from "published" lifecycle when
it exists, else "not released". Display format: 31-Jan-2012.


--------------------------------------------------
Updating info when Collections/Items are published
--------------------------------------------------

Collection
  publish(value)

Item
  validate :collection_is_open, :on => :create
  validates :actors, :at_least_one=>true, :if => :should_validate
  validates :files, :at_least_one=>true, :if => :should_validate

  is_open
  publish
  collection_is_open
  deal with commented tests

integration tests
  complete_workflow_step
  is_publishable
  is_published
  is_approved
  collection view
    deal with commented tests
  collection
    valid?
    is_destroyable
    publish
    is_open


---------------------------
hydrusProperties datastream
---------------------------

Create hydrusProperties datastream.

Store whether user has checked the "agree to terms" checkbox. Use the hydrusProperties
datastream. Also uncomment the validation connected to the checkbox.

Consider putting additional info in hydrusProperties datastream, such as: submit time,
published status, release date.

Collection create/edit: store whether Collection requires approval/review.

Whether collection requires approval: need UI component.

Whether item requires approval: (1) will this exist; (2) if so, use
hydrusProperties datastream; (3) need UI component.

-------
BUGS
-------
When javascript is disabled, it is not possible to add new items.  The drop down menus in "what you can do" don't work correctly with JS off.

-------
WAITING
-------

Need a place to store Item types. Currently hardcoded to :dataset. Also see object_type()
in GenericObject.

APO RELS-EXT datastream needs to add a child node to <rdf:Description>:
<hydra:referencesAgreement rdf:resource="info:fedora/druid:XXX"/>, where XXX is
the PID of the global Hydrus Agreement object. [The Hydrus agreement object
needs to be created -- need more details].

Events datastreams for Collections and Items: create datastreams and add events
to them. See Consul Hydrus+Event+History. [Waiting Lynn and Hannah to finalize].

Item view: release date. See Consul page. Date from "published" lifecycle when
it exists, else "not released". Display format: 31-Jan-2012. [waiting on
workflow discussion]

Use reified WFs rather than putting them in the APO. [Need more info on how
this works and its relative priority. Also waiting on some work Willy is doing
in dor-services.]

Collection create: APO.roleMetadata: set the value of <name> for the
collection-manager [waiting on LDAP].

Collection create: APO.descMetadata. Flesh out. [waiting on spec from Lynn]

Should roleMetadata have an XML namespace? If so, what should it be? Could
not find any definitive examples in Consul. [Ask Lynn]

Qualify roles by their domain: for example, "hydrus:collection_creator". See
Consul Repository+Roles+and+Permissions. [Waiting on Lynn and Hannah to
finalize.]
